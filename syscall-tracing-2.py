import os
import subprocess
import re
import time

# Check if 'adb' command is available
def check_adb():
    try:
        subprocess.check_output(["adb", "--version"])
    except subprocess.CalledProcessError:
        raise Exception("Error: 'adb' command not found. Please make sure Android Debug Bridge is installed and in your PATH.")

# Function to start strace and monkey, then extract logFile
def start_strace_monkey(package, apk_file):
    # Install the APK file
    subprocess.call(["adb", "install", apk_file])

    # Start the main activity of the application
    subprocess.call(["adb", "shell", "am", "start", "-n", f"{package}/.MainActivity"])

    # Get the process ID of the running app
    process = subprocess.Popen(["adb", "shell", "pidof", package], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    # Wait for the command to complete and capture the output
    stdout, stderr = process.communicate()

    # Check the return code to see if the command was successful
    if process.returncode == 0:
        # The command was successful
        pid = stdout.decode().strip()
        if pid:

            # Start strace
            log_file = f"strace_{package}.txt"
            subprocess.Popen(["adb", "shell", "strace", "-p", pid, "-o", log_file, "-f", "-ttt"])

            # Start adb monkey for 2 minutes
            subprocess.call(["adb", "shell", "monkey", "-p", package, "--throttle", "200", "--ignore-crashes", "--ignore-timeouts", "120"])

            # Close the app
            subprocess.call(["adb", "shell", "am", "force-stop", package])

            # Sleep for a moment to ensure strace finishes
            time.sleep(1)

            # Kill strace
            subprocess.call(["adb", "shell", "pkill", "strace"])

            # Extract the logFile to local storage
            subprocess.call(["adb", "pull", log_file])
    else:
        # The command encountered an error
        print(f"Error: Could not retrieve the process ID for package {package}.")

    # Uninstall the APK file
    subprocess.call(["adb", "uninstall", package])

# Directory containing APK files
dir = "apks"

# Check if adb is available
check_adb()

# Iterate through APK files in the directory
for apk_file in os.listdir(dir):
    if apk_file.endswith(".apk"):
        package_match = re.search(r'package: name=\'([^\']+)\'', subprocess.check_output(["aapt", "dump", "badging", os.path.join(dir, apk_file)]).decode())
        if package_match:
            package = package_match.group(1)
            start_strace_monkey(package, os.path.join(dir, apk_file))
        else:
            print(f"Error: Could not retrieve the package name from APK file {apk_file}.")

