import csv
import re

log_file = 'logs/strace/100-0a5b73f6e6a06e74ce9f64467e160b5cca6a7c22f861cf4597641f06e7779d31.trace'
csv_file = 'features/strace_data.csv'

android_syscalls = [
    "open", "close", "read", "write", "lseek", "stat", "fstat", "fcntl", "ioctl", "mmap",
    "munmap", "mprotect", "brk", "clone", "execve", "exit", "waitpid", "getpid", "gettid",
    "kill", "pipe", "socket", "bind", "connect", "listen", "accept", "send", "recv",
    "getsockopt", "setsockopt", "futex", "epoll_create", "epoll_ctl", "epoll_wait", "sigaction",
    "sigprocmask", "sigreturn", "prctl", "sched_yield", "sched_setaffinity", "sched_getaffinity",
    "clock_gettime", "time", "gettimeofday", "nanosleep", "uname", "sysinfo", "getcwd",
    "chdir", "mkdir", "rmdir", "unlink", "rename", "chmod", "chown", "utime",
    "access", "fsync", "sync", "getpid", "getuid", "getgid", "geteuid", "getegid",
    "setuid", "setgid", "seteuid", "setegid", "getgroups", "setgroups", "chroot", "gettimeofday",
    "settimeofday", "select", "getdents", "link", "symlink", "readlink", "umask", "utimes",
    "readv", "writev", "pread64", "pwrite64", "getresuid", "getresgid", "setresuid", "setresgid",
    "getrlimit", "setrlimit", "prlimit64", "getrusage", "capget", "capset", "pivot_root", "quotactl",
    "ioperm", "iopl", "inotify_init", "inotify_add_watch", "inotify_rm_watch", "splice", "tee", "vmsplice",
    "sync_file_range", "fanotify_init", "fanotify_mark", "clock_getres", "clock_nanosleep", "timer_create",
    "timer_settime", "timer_gettime", "timer_getoverrun", "timer_delete", "clock_getcpuclockid", "getpid",
    "epoll_pwait", "signalfd", "eventfd", "timerfd_create", "timerfd_settime", "timerfd_gettime",
    "signalfd4", "eventfd2", "epoll_create1", "dup3", "pipe2", "inotify_init1", "preadv", "pwritev",
    "rt_tgsigqueueinfo", "perf_event_open", "recvmmsg", "fanotify_init", "fanotify_mark", "prlimit64",
    "name_to_handle_at", "open_by_handle_at", "clock_adjtime", "syncfs", "setns", "getcpu",
    "process_vm_readv", "process_vm_writev"
]

syscall_data = {}
counter = {}

with open(log_file, 'r') as file:
    for line in file:
        for syscall in android_syscalls:
            if syscall in line:
                # Extract syscall name
                match = re.search(r'(\w+)\(', line)
                if match:
                    syscall_name = match.group(1)

                # Check if syscall name is already present
                if syscall_name in syscall_data:
                    counter[syscall_name] += 1
                    syscall_name_with_counter = f"{syscall_name}_{counter[syscall_name]}"
                    syscall_data[syscall_name_with_counter] = {
                        'syscall_name': syscall_name_with_counter,
                        'line': line.strip()  # Optionally store the entire line for reference
                    }
                else:
                    counter[syscall_name] = 0
                    syscall_data[syscall_name] = {
                        'syscall_name': syscall_name,
                        'line': line.strip()  # Optionally store the entire line for reference
                    }
                break  # Break the loop after finding a match

# Save extracted data to a CSV file
fieldnames = ['syscall_name', 'line']

with open(csv_file, 'w', newline='') as file:
    writer = csv.DictWriter(file, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(syscall_data.values())
