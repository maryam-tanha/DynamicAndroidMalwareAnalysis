import subprocess
import time
import re


def install_application(apk_path):
    subprocess.call(["adb", "install", apk_path])


def retrieve_zygote_pid():
    zygote_pid = subprocess.check_output(
        ["adb", "shell", "pidof", "zygote"]).decode().strip()
    return int(zygote_pid)


def run_strace_on_zygote(output_file):
    zygote_pid = retrieve_zygote_pid()
    subprocess.Popen(["adb", "shell", "strace", "-p",
                     str(zygote_pid), "-o", output_file])


def start_application(package_name):
    subprocess.call(["adb", "shell", "monkey", "-p", package_name,
                    "-c", "android.intent.category.LAUNCHER", "1"])


def retrieve_application_pid(package_name):
    pid = subprocess.check_output(
        ["adb", "shell", "pidof", package_name]).decode().strip()
    return int(pid)


def simulate_user_interactions(package_name, duration):
    subprocess.Popen(["adb", "shell", "monkey", "-p", package_name, "-v", "--throttle", "200", "--pct-touch", "50", "--pct-motion", "25", "--pct-majornav",
                     "25", "--ignore-crashes", "--ignore-timeouts", "--ignore-security-exceptions", "--monitor-native-crashes", "-s", "1234", "-v", "-v", "-v", str(duration)])


def stop_strace(output_file, output_repository):
    subprocess.call(["adb", "shell", "pkill", "strace"])
    subprocess.call(["adb", "pull", output_file, output_repository])


def get_package_name(apk_path):
    aapt_output = subprocess.check_output(
        ["aapt", "dump", "badging", apk_path]).decode()
    package_name_match = re.search(r"package: name='([^']*)'", aapt_output)
    if package_name_match:
        return package_name_match.group(1)
    else:
        raise ValueError("Failed to retrieve package name from APK file.")


# Main execution
apk_path = "apks/sample.apk"
output_file = "strace_output.txt"
output_repository = "logs/"
package_name = get_package_name(apk_path)


# Step 1: Install application from input repository
install_application(apk_path)

# Step 2: Retrieve zygote process ID (PID)
zygote_pid = retrieve_zygote_pid()

# Step 3: Run strace on zygote
run_strace_on_zygote(output_file)

# Step 4: Start an application and run for 20 seconds
start_application(package_name)  
time.sleep(20)

# Step 5: Retrieve the application PID
application_pid = retrieve_application_pid(package_name)

# Step 6: Simulate user interactions using Monkey and run for 200 seconds
simulate_user_interactions(200)

# Step 7: Stop strace, move log file to output repository
stop_strace(output_file, output_repository)
