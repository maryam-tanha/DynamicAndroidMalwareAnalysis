import os
import re
import sys
import csv
from collections import defaultdict

def safe_open_w(path):
    ''' Open "path" for writing, creating any parent directories as needed.
    '''
    os.makedirs(os.path.dirname(path), exist_ok=True)
    return open(path, 'w', newline='')

if len(sys.argv) != 2:
    print("Usage: python extract-features-syscall.py folder_path")
    sys.exit(1)

folder_path = sys.argv[1]
folder_path_csv = "malware-features/syscall-info-v3/"

# Regular expression pattern to match syscall lines
syscall_pattern = re.compile(r'^(?P<pid>\d+)\s+(?P<timestamp>\d+\.\d+)\s+(?P<syscall>\w+)\((?P<params>[^)]+)\)\s+=\s+(?P<retval>\w+)', re.MULTILINE)

# Loop through the files in the folder
for filename in os.listdir(folder_path):
    if filename.endswith('.txt'):  # Process only .txt files
        log_file_path = os.path.join(folder_path, filename)

        # Create data structures to store syscall information
        syscall_frequency = defaultdict(int)

        # Read the strace log
        with open(log_file_path, 'r') as log_file:
            log_data = log_file.read()

        # Extract syscall information using the pattern
        syscall_matches = syscall_pattern.finditer(log_data)

        # Process the syscall matches
        for match in syscall_matches:
            syscall = match.group('syscall')

            syscall_frequency[syscall] += 1

        # Write data to a CSV file
        csv_file_path = os.path.join(folder_path_csv, f'{filename.split(".txt")[0]}.csv')
        with safe_open_w(csv_file_path) as csv_file:
            csv_writer = csv.writer(csv_file)

            # Write header
            csv_writer.writerow(['Syscall', 'Frequency'])

            # Write syscall information
            for syscall, freq in syscall_frequency.items():
                csv_writer.writerow([syscall, freq])

